import numpy as np
import matplotlib.pyplot as plt

# Constants
n_atoms = 10000       # Number of atoms
box_size = 10.0       # Size of the box (10x10x10 cube)
timesteps = 5000      # Number of timesteps
mass = 1.0            # Mass of each atom
n_experiments = 10000  # Number of experiments

# Theoretical mean velocity from Maxwell-Boltzmann distribution
mean_velocity_theoretical = np.sqrt(8 / np.pi)
print(f"Theoretical Mean Velocity: {mean_velocity_theoretical:.4f}")

# Function to update positions and handle collisions with walls
def update_positions(positions, velocities, box_size):
    positions += velocities
    
    # Reflect atoms off the walls elastically
    for i in range(3):  # For each dimension x, y, z
        mask = positions[:, i] < 0
        velocities[mask, i] = -velocities[mask, i]
        positions[mask, i] = 0
        
        mask = positions[:, i] > box_size
        velocities[mask, i] = -velocities[mask, i]
        positions[mask, i] = box_size
        
    return positions, velocities

# Perform the experiment 1000 times
mean_velocities = []

for _ in range(n_experiments):
    # Initialize positions and velocities
    positions = np.random.uniform(0, box_size, (n_atoms, 3))
    velocities = np.random.normal(0, 1, (n_atoms, 3))

    # Simulate the motion
    for _ in range(timesteps):
        positions, velocities = update_positions(positions, velocities, box_size)

    # Compute the speed of each atom
    speeds = np.linalg.norm(velocities, axis=1)
    
    # Calculate the mean speed
    mean_velocity = np.mean(speeds)
    mean_velocities.append(mean_velocity)

# Calculate the average of the mean velocities across all experiments
average_mean_velocity = np.mean(mean_velocities)

# Print the result
print(f"Average Mean Velocity after 1000 experiments: {average_mean_velocity:.4f}")

# Plot the distribution of mean velocities from the experiments
plt.hist(mean_velocities, bins=30, alpha=0.7, color='blue')
plt.axvline(average_mean_velocity, color='r', linestyle='dashed', linewidth=2, label=f'Avg Mean Velocity: {average_mean_velocity:.4f}')
plt.axvline(mean_velocity_theoretical, color='g', linestyle='dotted', linewidth=2, label=f'Theoretical Mean Velocity: {mean_velocity_theoretical:.4f}')

plt.xlabel('Mean Velocity')
plt.ylabel('Frequency')
plt.title('Distribution of Mean Velocities over 1000 Experiments')
plt.legend()
plt.figure()
# Plot the histogram of speeds
plt.hist(speeds, bins=30, density=True, alpha=0.6, color='b')

# Maxwell-Boltzmann distribution for comparison
v = np.linspace(0, np.max(speeds), 100)
maxwell_boltzmann = (mass / (2 * np.pi))**1.5 * 4 * np.pi * v**2 * np.exp(-mass * v**2 / 2)
plt.plot(v, maxwell_boltzmann, 'r-', lw=2, label='Maxwell-Boltzmann')

plt.xlabel('Speed')
plt.ylabel('Probability Density')
plt.title('Speed Distribution of Atoms in a Box')
plt.legend()
plt.show()
